version: "3.8"
services:
  postgres:
    image: "postgres:alpine"
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - proxy
    labels:
      - "traefik.docker.network=proxy"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entrypoints=tcp"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

  pgadmin:
    image: "dpage/pgadmin4"
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - proxy
    labels:
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${SERVER_HOSTNAME}`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

volumes:
  postgres_data:
    external: true
  pgadmin_data:
    external: true

networks:
  proxy:
    external: true
